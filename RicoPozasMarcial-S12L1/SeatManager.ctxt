#BlueJ class context
comment0.target=SeatManager
comment0.text=\r\n\ Clase\ SeatManager\ de\ la\ sesion\ 11\r\n\ \r\n\ @author\ MARCIAL\ RICO\ POZAS\r\n\ @version\ 03/12/2017\r\n
comment1.params=
comment1.target=SeatManager()
comment1.text=\r\n\ constructor\ por\ defecto\ de\ objetos\ de\ la\ clase\ SeatManager\r\n
comment10.params=
comment10.target=Person\ getOldestPassenger()
comment10.text=\r\n\ metodo\ oldestPassenger\ de\ la\ clase\ SeatManager\r\n\ \r\n\ @return\ la\ persona\ con\ mayor\ edad\ del\ avion\r\n
comment11.params=row
comment11.target=int\ numberOfFreeSeats(int)
comment11.text=\r\n\ metodo\ numberOfFreeSeats\ de\ la\ clase\ SeatManager\r\n\ \r\n\ @param\ row,\ un\ entero\ que\ que\ se\ corresponde\ con\ la\ fila\ a\ analizar\r\n\ @return\ numero\ de\ asientos\ libres\ en\ la\ final\ del\ avion\ que\ se\ le\ pasa\ como\ parametro\r\n
comment12.params=fila
comment12.target=java.util.ArrayList\ getFreePosition(int)
comment12.text=\r\n\ @return\ lista\ de\ las\ posiciones\ libres\ de\ la\ fila\ recibida\ como\ parametro\r\n
comment13.params=row
comment13.target=java.util.ArrayList\ rowPassengers(int)
comment13.text=\r\n\ metodo\ rowPassangers\ de\ la\ clase\ SeatManager\r\n\ \r\n\ @return\ lista\ con\ las\ personas\ de\ la\ fila\ recibida\ como\ par\u00E1metro\r\n
comment14.params=row
comment14.target=java.util.ArrayList\ freePassengers(int)
comment14.text=\r\n\ metodo\ freePassengers\ de\ la\ clase\ SeatManager\r\n\ \r\n\ @param\ row,\ un\ entero\ que\ indica\ la\ fila\r\n\ @return\ lista\ de\ las\ posiciones\ libres\ de\ la\ fila\ recibida\ como\ parametro\r\n
comment15.params=passenger\ fila\ columna
comment15.target=boolean\ bookSeat(Person,\ int,\ int)
comment15.text=\r\n\ metodo\ bookSeat\ de\ la\ clase\ SeatManager\ \r\n\ \r\n\ @param\ persona,\ de\ tipo\ Person\r\n\ @param\ final,\ en\ la\ que\ se\ hace\ la\ reserva\r\n\ @param\ columna\ en\ la\ que\ se\ hace\ la\ reserva\r\n\ \r\n\ @return\ true\ si\ se\ ha\ podido\ hacer\ y\ false\ si\ estaba\ el\ asiento\ ocupado\r\n
comment16.params=fila\ columna
comment16.target=boolean\ releaseSeat(int,\ int)
comment16.text=\r\n\ metodo\ releaseSeat\ de\ la\ clase\ SeatManager\r\n\ \r\n\ @param\ fila,\ un\ entero\ que\ indica\ la\ fila\r\n\ @param\ columna,\ un\ entero\ que\ indica\ la\ columna\r\n\ \r\n\ @return\ true\ si\ el\ asiento\ esta\ libre\ o\ false\ si\ sigue\ ocupado\r\n
comment17.params=fila\ columna
comment17.target=Person\ getSeat(int,\ int)
comment17.text=\r\n\ Metodo\ getSeat\ de\ la\ clase\ SeatManager\r\n\ \r\n\ @param\ fila\r\n\ @param\ columna\r\n\ \r\n\ @return\ persona\ que\ esta\ en\ esa\ posicion\ o\ null\r\n
comment18.params=fila
comment18.target=void\ checkRow(int)
comment18.text=\r\n\ metodo\ checkRow\ de\ la\ clase\ SeatManager\r\n\ @param\ fila,\ un\ entero\ que\ da\ el\ valor\ de\ la\ fila\ a\ comprobar\r\n
comment19.params=columna
comment19.target=void\ checkColumn(int)
comment19.text=\r\n\ metodo\ checkColumn\ \r\n\ @param\ columna,\ un\ entero\ que\ da\ el\ valor\ de\ la\ columna\ a\ comprobar\r\n
comment2.params=first\ standard
comment2.target=SeatManager(int,\ int)
comment2.text=\r\n\ Constructor\ con\ parametros\ de\ objetos\ de\ la\ clase\ SeatManager\r\n\ @param\ first,\ un\ entero\ que\ asigna\ las\ filas\ en\ primera\r\n\ @param\ standard,\ un\ entero\ que\ asigna\ las\ filas\ en\ turista\r\n
comment20.params=
comment20.target=java.util.ArrayList\ getOldestPeople()
comment20.text=\r\n\ @return\ ArrayList\ que\ contenga\ a\ las\ personas\ de\ menor\ edad\ sentadas\ en\ el\ avion\r\n
comment21.params=
comment21.target=void\ print()
comment21.text=\r\n\ metodo\ print\ de\ la\ clase\ SeatManager\r\n
comment22.params=maxPassengers
comment22.target=void\ loadPassengers(int)
comment22.text=\r\n\ metodo\ loadPassengers\ de\ la\ clase\ SeatManager\r\n\ @param\ maxPassengers,\ un\ entero\ que\ asigna\ un\ maximo\ de\ pasajeros\ a\ introducir\ aleatoriamente\r\n
comment23.params=
comment23.target=java.util.ArrayList\ childrenPassengers()
comment23.text=\r\n\ metodo\ childrenPassengers\ de\ la\ clase\ SeatManager\r\n\ \r\n\ @return\ un\ arrayList\ con\ los\ ni\u00F1os\ sentados\ en\ el\ avion\r\n
comment24.params=area
comment24.target=int\ getNumPax(byte)
comment24.text=\r\n\ metodo\ getNumPax\ de\ la\ clase\ SeatManager\r\n\ \r\n\ @param\ area,\ un\ byte\ que\ especifica\ el\ area\ del\ avion\ \r\n
comment25.params=paxNumber
comment25.target=void\ loadPax(int)
comment25.text=\r\n\ metodo\ loadPax\ de\ la\ clase\ SeatManager\r\n\ \r\n\ @param\ paxNumber,\ un\ entero\ que\ indica\ el\ numero\ de\ pasajeros\ a\ introducir\r\n
comment26.params=row
comment26.target=Person[]\ devolverFila(int)
comment26.text=\r\n\ metodo\ que\ devuelve\ una\ fila\ determinada\ del\ array\r\n\ \r\n\ @param\ row,\ fila\ a\ devolver\r\n\ @return\ los\ elementos\ de\ la\ fila\ indicada\r\n
comment27.params=column
comment27.target=Person[]\ getColumn(int)
comment27.text=\r\n\ metodo\ getColumn\ de\ la\ clase\ SeatManager\r\n\ \r\n\ @param\ column,\ un\ entero\ que\ indica\ el\ numero\ de\ la\ columna\ a\ devolver\r\n\ @return\ columna,\ un\ array\ con\ los\ valores\ de\ la\ columna\ indicada\r\n
comment28.params=f1\ f2\ c1\ c2
comment28.target=Person[][]\ getSection(int,\ int,\ int,\ int)
comment28.text=\r\n\ metodo\ getSection\ de\ la\ clase\ SeatManager\r\n\ \r\n\ @param\ f1,\ un\ entero\ que\ indica\ la\ fila\ que\ forma\ un\ angulo\ con\ c1\r\n\ @param\ f2,\ un\ entero\ que\ indica\ la\ fila\ que\ forma\ el\ otro\ angulo\ con\ c2\r\n\ @param\ c1,\ un\ entero\ que\ indica\ la\ columna\ que\ forma\ un\ angulo\ con\ f1\r\n\ @param\ c2,\ un\ entero\ que\ indica\ la\ columna\ que\ forma\ el\ otro\ angulo\ con\ f2\r\n\ \r\n\ @param\ section,\ un\ array\ con\ las\ personas\ contenidas\ en\ la\ seccion\r\n
comment29.params=row1\ colum1\ row2\ colum2
comment29.target=int\ getNumPaxBySection(int,\ int,\ int,\ int)
comment29.text=\r\n\ metodo\ getNumPaxBySection\r\n\ \r\n\ @param\ row1,\ un\ entero\ que\ indica\ la\ fila\ que\ forma\ un\ angulo\ con\ colum1\r\n\ @param\ row2,\ un\ entero\ que\ indica\ la\ fila\ que\ forma\ el\ otro\ angulo\ con\ colum2\r\n\ @param\ colum1,\ un\ entero\ que\ indica\ la\ columna\ que\ forma\ un\ angulo\ con\ row1\r\n\ @param\ colum2,\ un\ entero\ que\ indica\ la\ columna\ que\ forma\ el\ otro\ angulo\ con\ row2\r\n\ \r\n\ @return\ el\ numero\ de\ personas\ contenidas\ en\ la\ seccion\r\n
comment3.params=first
comment3.target=void\ setFirst(int)
comment3.text=\r\n\ metodo\ set\ del\ atributo\ first\r\n\ \r\n\ @param\ first,\ indica\ el\ numero\ de\ filas\ de\ primera\ clase\r\n
comment4.params=
comment4.target=int\ getFirst()
comment4.text=\r\n\ metodo\ get\ del\ atributo\ first\r\n\ \r\n\ @return\ el\ valor\ de\ first\r\n
comment5.params=standard
comment5.target=void\ setStandard(int)
comment5.text=\r\n\ metodo\ set\ del\ atributo\ standard\r\n\ \r\n\ @param\ standard,\ indica\ el\ numero\ de\ filas\ de\ clase\ turista\r\n
comment6.params=
comment6.target=int\ getStandard()
comment6.text=\r\n\ metodo\ get\ del\ atributo\ standard\r\n\ \r\n\ @return\ el\ valor\ de\ standard\r\n
comment7.params=standard\ first
comment7.target=void\ setSeats(int,\ int)
comment7.text=\r\n\ metodo\ set\ del\ atributo\ seats\r\n\ \r\n\ @param\ standard,\ un\ entero\ que\ indica\ los\ asientos\ de\ clase\ turista\r\n\ @param\ first,\ un\ entero\ que\ indica\ los\ asientos\ de\ primera\ clase\r\n
comment8.params=
comment8.target=Person[][]\ getSeats()
comment8.text=\r\n\ metodo\ get\ del\ atributo\ seats\r\n\ \r\n\ @return\ el\ valor\ de\ seats\r\n
comment9.params=
comment9.target=Person\ firstPassenger()
comment9.text=\r\n\ metodo\ firstPassenger\ de\ la\ clase\ SeatManager\r\n\ \r\n\ @return\ primer\ pasajero\ que\ encuentra\ al\ recorrer\ la\ matriz\r\n\ Si\ no\ hay\ pasajero\ que\ lance\ excepci\u00F3n\r\n
numComments=30
